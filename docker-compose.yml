#!/usr/bin/env -S docker-compose -p sql -f

version: "3.7"

volumes:
  mysql_data:
    driver: local
  proxy_data:
    driver: local

networks:
  default:
    driver: bridge
    internal: false
    external: false

services:

  # ssltest:
  #   tty: true
  #   stdin_open: true
  #   image: debian:stable
  #   command: bash -c 'apt update
  #            && apt install -y openssl
  #            && sleep 30
  #            && echo
  #            \ | openssl s_client -starttls mysql -connect $$HOST:$$PORT'
  #   networks:
  #     - default
  #   environment:
  #     HOST: proxy
  #     PORT: 6033

  # nginx:
  #   image: nginx
  #   restart: on-failure
  #   command: nginx -t
  #   networks:
  #     - default
  #   ports:
  #     - 23306:3306
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./:/data

  mysql: # v 5.6.37
    image: percona:5.6.37
    restart: on-failure
    #command: mysqld --verbose --default-authentication-plugin=sha256_password
    networks:
      - default
    ports:
      - 3306:3306
    volumes:
      - ./:/data
      - ./sha256.cnf:/etc/mysql/conf.d/sha256.cnf:ro
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - mysql_data:/var/lib/mysql
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_ROOT_PASSWORD: toor
      MYSQL_DATABASE: testdb
      MYSQL_PASSWORD: hello
      MYSQL_USER: hello
    healthcheck:
      test: mysql -P3306 -h127.0.0.1 -uroot -ptoor -e"show databases;"
      interval: 1m
      timeout: 10s
      retries: 3

  proxy: # v 1.4.5
    build:
      context: ./
      dockerfile: ./proxysql.dockerfile
    image: pvtmert/proxysql
    restart: on-failure
    working_dir: /var/lib/proxysql
    depends_on:
      - mysql
    networks:
      - default
    ports:
      - 16080:6080
      - 13306:3306
      - 16032:6032
      - 16033:6033
    volumes:
      - ./:/data:ro
      - ./proxysql.cnf:/etc/proxysql.cnf:ro
      - proxy_data:/var/lib/proxysql:rw
